name: CD Pipeline

on:
    push:
        branches:
            - master

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: eu-north-1

            - name: Login to ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Push to ECR
              env:
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  ECR_REPOSITORY: uniclip/dispatch-service
              run: |
                  docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
                  docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

            - name: Install kubectl
              id: kubectl-install
              uses: azure/setup-kubectl@v1
              with:
                  version: v1.27.1

            - name: Update kubeconfig
              run: |
                  aws eks update-kubeconfig --name uniclip --region eu-north-1 --kubeconfig /home/runner/.kube/config
                  export KUBECONFIG=/home/runner/.kube/config

            - name: Print kubeconfig
              run: cat /home/runner/.kube/config
  
            # - name: Create secrets
            #   run: |
            #       kubectl create secret generic secrets \
            #           --from-literal=RABBITMQ_HOSTNAME=${{ secrets.RABBITMQ_HOSTNAME }} \
            #           --from-literal=RABBITMQ_PASSWORD=${{ secrets.RABBITMQ_PASSWORD }} \
            #           --from-literal=RABBITMQ_USERNAME=${{ secrets.RABBITMQ_USERNAME }}

            - name: Deploy to EKS
              run: kubectl apply -f ./k8s/manifests/
